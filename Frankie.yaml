# 配置文件已根据您的要求，整合了自定义的规则系统。
# 原有的机场订阅、DNS、TUN等核心设置均已保留。

# 机场订阅
proxy-providers:
  红杏机场:
    url: "https://hongxing.one/hxyunvip?token=19a8fa3db42efe7828d67780555749f7"
    type: http
    interval: 86400
    filter: '(?!.*(剩余流量|重置套餐|官网|节点异常|刷新失败|❗)).*'
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300

  牛逼加速器:
    url: "https://zhuzhuzhu.whtjdasha.com/api/v1/client/subscribe?token=791ed5e6d2e563d30abcf3a98a136ffb"
    type: http
    interval: 86400
    filter: '(?!.*(剩余流量|重置套餐|官网|节点异常|刷新失败|❗)).*'
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300

    
    override:
      udp: true

# 用于下载订阅时指定UA
global-ua: clash.meta

# 节点信息


# 全局配置 
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: true
unified-delay: true
tcp-concurrent: true
# interface-name: enp6s18
log-level: warning
find-process-mode: strict
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 30

geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
geox-url:
  geosite: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.metadb"
  geoip: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  asn: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb"

profile:
  store-selected: true
  store-fake-ip: true

# 嗅探
sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - "Mijia Cloud"
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"

# 入站  
tun:
  enable: true
  stack: mixed
  mtu: 9000
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain" 
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
    - "+.market.xiaomi.com"
  default-nameserver:
    - 223.5.5.5
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
  nameserver:
    - 223.5.5.5
    - 119.29.29.29

# --- 以下为根据您的要求生成的全新策略组、规则集和规则 ---

# 策略组 (Proxy Groups)
proxy-groups:
  # 1. 策略选择组 (用于规则匹配)
  - name: ✨ 直连
    type: select
    proxies: [DIRECT, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 香港-自动, 台湾-自动, 日本-自动, 新加坡-自动, 韩国-自动, 美国-自动, 欧洲-自动, 其他-自动, REJECT]
  - name: 👽 AI
    type: select
    proxies: [DIRECT, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 香港-自动, 台湾-自动, 日本-自动, 新加坡-自动, 韩国-自动, 美国-自动, 欧洲-自动, 其他-自动, REJECT]
  - name: 📘 GitHub
    type: select
    proxies: [DIRECT, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 香港-自动, 台湾-自动, 日本-自动, 新加坡-自动, 韩国-自动, 美国-自动, 欧洲-自动, 其他-自动, REJECT]
  - name: 👯‍♂️ TikTok
    type: select
    proxies: [DIRECT, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 香港-自动, 台湾-自动, 日本-自动, 新加坡-自动, 韩国-自动, 美国-自动, 欧洲-自动, 其他-自动, REJECT]
  - name: 🙋 Telegram
    type: select
    proxies: [DIRECT, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 香港-自动, 台湾-自动, 日本-自动, 新加坡-自动, 韩国-自动, 美国-自动, 欧洲-自动, 其他-自动, REJECT]
  - name: 📀 流媒体
    type: select
    proxies: [DIRECT, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 香港-自动, 台湾-自动, 日本-自动, 新加坡-自动, 韩国-自动, 美国-自动, 欧洲-自动, 其他-自动, REJECT]
  - name: 🌍 国外
    type: select
    proxies: [DIRECT, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 香港-自动, 台湾-自动, 日本-自动, 新加坡-自动, 韩国-自动, 美国-自动, 欧洲-自动, 其他-自动, REJECT]
  - name: 🌵 代理
    type: select
    proxies: [DIRECT, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 香港-自动, 台湾-自动, 日本-自动, 新加坡-自动, 韩国-自动, 美国-自动, 欧洲-自动, 其他-自动, REJECT]
  - name: ➡️ 国内
    type: select
    proxies: [DIRECT, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 香港-自动, 台湾-自动, 日本-自动, 新加坡-自动, 韩国-自动, 美国-自动, 欧洲-自动, 其他-自动, REJECT]

  # 2. 节点过滤与自动测速组 (被上面的策略组调用)
  - name: 所有-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    use: [红杏机场, 牛逼加速器]
    filter: '*'
  - name: 港台日新韩-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    use: [红杏机场, 牛逼加速器]
    filter: '(广港|广台|广日|广新|广韩|广美|香港|HK|Hong Kong|🇭🇰|HongKong|台湾|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|新加坡|SG|坡|狮城|🇸🇬|Singapore|韩国|KR|首尔|春川|🇰🇷|Korea)'
  - name: 台日新韩-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    use: [红杏机场, 牛逼加速器]
    filter: '(广台|广日|广新|广韩|广美|台湾|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|新加坡|SG|坡|狮城|🇸🇬|Singapore|韩国|KR|首尔|春川|🇰🇷|Korea)'
  - name: 香港-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    use: [红杏机场, 牛逼加速器]
    filter: '(广港|香港|HK|Hong Kong|🇭🇰|HongKong)'
  - name: 台湾-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    use: [红杏机场, 牛逼加速器]
    filter: '(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)'
  - name: 日本-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    use: [红杏机场, 牛逼加速器]
    filter: '(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)'
  - name: 新加坡-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    use: [红杏机场, 牛逼加速器]
    filter: '(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)'
  - name: 韩国-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    use: [红杏机场, 牛逼加速器]
    filter: '(广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea)'
  - name: 美国-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    use: [红杏机场, 牛逼加速器]
    filter: '(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|硅谷|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|3180|United States)'
  - name: 欧洲-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    use: [红杏机场, 牛逼加速器]
    filter: '(英|CA|加|UK|德|DE|法|FR|荷|NL|俄|RU|意|IT|土|TR|西|ES|瑞典|SE|瑞士|CH|葡|PT|波|PL|捷|CZ|斯|SK|匈|HU|丹|DK|芬|FI|挪|NO|爱尔兰|IE|比利时|BE|希腊|GR|卢森堡|LU|冰岛|IS)'
  - name: 其他-自动
    type: url-test
    url: https://www.gstatic.com/generate_204git
    interval: 180
    use: [红杏机场, 牛逼加速器]
    filter: '(柬|KH|尼|NG|也|YE|秘|PE|利|LY|埃|EG|孟|BD|澳|AU|墨|MX|印|IN|越|VN|智|CL|巴|BR|沙|SA|泰|TH|以|IgithubL|南非|ZA|阿根廷|AR)'

# 规则集 (Rule Providers)
rule-providers:
  直连规则:
    type: http
    behavior: classical
    format: text
    url: "https://raw.githubusercontent.com/Frankieli123/clash2/refs/heads/main/Clash-Zhilian.list"
    interval: 86400
  AI规则IP:
    type: http
    behavior: ipcidr
    format: mrs
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/ai.mrs"
    interval: 86400
  AI规则:
    type: http
    behavior: domain
    format: mrs
    url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.mrs"
    interval: 86400
  GitHub规则:
    type: http
    behavior: domain
    format: mrs
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/github.mrs"
    interval: 86400
  TikTok规则:
    type: http
    behavior: domain
    format: mrs
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/tiktok.mrs"
    interval: 86400
  Telegram规则:
    type: http
    behavior: domain
    format: mrs
    url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/telegram.mrs"
    interval: 86400
  流媒体规则1_YouTube_liandu:
    type: http
    behavior: domain
    format: mrs
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/youtube.mrs"
    interval: 86400
  流媒体规则2_YouTube_bm:
    type: http
    behavior: domain
    format: mrs
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/youtube%40cn.mrs"
    interval: 86400
  流媒体规则3_HBO:
    type: http
    behavior: domain
    format: mrs
    url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/hbo.mrs"
    interval: 86400
  流媒体规则4_Disney:
    type: http
    behavior: domain
    format: mrs
    url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/disney.mrs"
    interval: 86400
  流媒体规则5_Netflix:
    type: http
    behavior: domain
    format: mrs
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"
    interval: 86400
  流媒体规则6_Spotify:
    type: http
    behavior: domain
    format: mrs
    url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/spotify.mrs"
    interval: 86400
  国外规则1_Check:
    type: http
    behavior: domain
    format: mrs
    url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/connectivity-check.mrs"
    interval: 86400
  国外规则2_Proxy:
    type: http
    behavior: domain
    format: mrs
    url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo-lite/geosite/proxy.mrs"
    interval: 86400
  国外规则3_Global:
    type: http
    behavior: domain
    format: mrs
    url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/globalsign.mrs"
    interval: 86400
  代理规则:
    type: http
    behavior: classical
    format: text
    url: "https://raw.githubusercontent.com/Frankieli123/clash2/refs/heads/main/Clash-Daili.list"
    interval: 86400
  
  # 用于DNS Fake-IP的规则集
  private_domain: 
    type: http
    behavior: domain
    format: mrs
    url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/private.mrs"
    interval: 86400
  cn_domain: 
    type: http
    behavior: domain
    format: mrs
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"
    interval: 86400
  cn_ip: 
    type: http
    behavior: ipcidr
    format: mrs
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"
    interval: 86400
  google_ip:
    type: http
    behavior: ipcidr
    format: mrs
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"
    interval: 86400
  telegram_ip:
    type: http
    behavior: ipcidr
    format: mrs
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"
    interval: 86400
  netflix_ip:
    type: http
    behavior: ipcidr
    format: mrs
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"
    interval: 86400
  private_ip:
    type: http
    behavior: ipcidr
    format: mrs
    url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geoip/private.mrs"
    interval: 86400

# 规则 (Rules)
rules:
  - RULE-SET,直连规则,✨ 直连
  - RULE-SET,private_ip,✨ 直连,no-resolve
  - RULE-SET,private_domain,✨ 直连
  - RULE-SET,AI规则,👽 AI,no-resolve
  - RULE-SET,AI规则IP,👽 AI
  - RULE-SET,GitHub规则,📘 GitHub
  - RULE-SET,TikTok规则,👯‍♂️ TikTok
  - RULE-SET,Telegram规则,🙋 Telegram
  - RULE-SET,telegram_ip,🙋 Telegram,no-resolve
  - RULE-SET,流媒体规则1_YouTube_liandu,📀 流媒体
  - RULE-SET,流媒体规则2_YouTube_bm,📀 流媒体
  - RULE-SET,流媒体规则3_HBO,📀 流媒体
  - RULE-SET,流媒体规则4_Disney,📀 流媒体
  - RULE-SET,流媒体规则5_Netflix,📀 流媒体
  - RULE-SET,流媒体规则6_Spotify,📀 流媒体
  - RULE-SET,netflix_ip,📀 流媒体,no-resolve
  - RULE-SET,国外规则1_Check,🌍 国外
  - RULE-SET,国外规则2_Proxy,🌍 国外
  - RULE-SET,国外规则3_Global,🌍 国外
  - RULE-SET,google_ip,🌍 国外,no-resolve
  - RULE-SET,代理规则,🌵 代理
  - RULE-SET,cn_domain,✨ 直连
  - RULE-SET,cn_ip,✨ 直连
  - MATCH,➡️ 国内
